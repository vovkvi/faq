#--------------------------------------------------
#   Расчет схемы замещения автотрансформатора
#   Пример: АТДЦТН-200000/330/110
#--------------------------------------------------

AT = {
    'Sном'      : 200.0,  # номинальная мощность, МВт
    'Uвн'       : 330.0,  # номинальное напряжение ВН, кВ
    'Uсн'       : 115.0,  # номинальное напряжение СН, кВ
    'Uнн'       : 38.5,   # номинальное напряжение НН, кВ
    'Uкз ВН-СН' : 10.0,   # напряжение КЗ ВН-СН, %
    'Uкз ВН-НН' : 35.0,   # напряжение КЗ ВН-НН, %
    'Uкз СН-НН' : 24.0,   # напряжение КЗ CН-НН, %
    'ΔPкз'      : 370.0,  # потери КЗ, кВт
    'ΔPхх'      : 115.0,  # потери ХХ, кВт
    'Iхх'       : 0.5     # ток ХХ, %
}

def calc_star():
    AT['ΔPкз'] = AT['ΔPкз'] / 1000                                    # перевод кВт в МВт
    AT['ΔPхх'] = AT['ΔPхх'] / 1000                                    # перевод кВт в МВт
    g = AT['ΔPхх'] / (AT['Uвн'] ** 2)                                 # активная поперечная проводимость, См
    g = round(g * 1000000, 3)                                         # перевод в мкСм
    b = (AT['Iхх'] * AT['Sном']) / (100 * (AT['Uвн'] ** 2))           # реактивная поперечная проводимость, См
    b = round(b * 1000000, 3)                                         # перевод в мкСм
    uk_v = (AT['Uкз ВН-НН'] + AT['Uкз ВН-СН'] - AT['Uкз СН-НН']) / 2  # пересчет напряжений КЗ ВН, %
    uk_s = (AT['Uкз СН-НН'] + AT['Uкз ВН-СН'] - AT['Uкз ВН-НН']) / 2  # пересчет напряжений КЗ СН, %
    uk_n = (AT['Uкз ВН-НН'] + AT['Uкз СН-НН'] - AT['Uкз ВН-СН']) / 2  # пересчет напряжений КЗ НН, %
    x_v = (uk_v * (AT['Uвн'] ** 2)) / (100 * AT['Sном'])              # реактивное сопротивление стороны ВН, Ом
    x_s = (uk_s * (AT['Uвн'] ** 2)) / (100 * AT['Sном'])              # реактивное сопротивление стороны СН, Ом
    x_n = (uk_n * (AT['Uвн'] ** 2)) / (100 * AT['Sном'])              # реактивное сопротивление стороны НН, Ом
    r_vs = (AT['ΔPкз'] * (AT['Uвн'] ** 2)) / (AT['Sном'] ** 2)        # суммарное активное сопротивление ВН и СН, Ом
    r_v = r_vs / 2                                                    # активное сопротивление стороны ВН, Ом
    r_s = r_vs / 2                                                    # активное сопротивление стороны СН, Ом
    s_v_perc = 100                                                    # мощность обмотки ВН по справочнику, %
    s_n_perc = 40                                                     # мощность обмотки НН по справочнику, %
    k = s_n_perc / s_v_perc                                           # коэффициент отношения мощности НН к ВН
    r_n = k * r_v                                                     # активное сопротивление стороны НН, Ом
    return(
        complex(g, b),                                                # Проводимость (комплексный вид)
        complex(round(r_v, 3), round(x_v, 3)),                        # Сопротивление ВН (комплексный вид)
        complex(round(r_s, 3), round(x_s, 3)),                        # Сопротивление СН (комплексный вид)
        complex(round(r_n, 3), round(x_n, 3))                         # Сопротивление НН (комплексный вид)
    )


def calc_triangle(Zv, Zs, Zn):
    Zv_s = Zv + Zs + ((Zv * Zs) / Zn)                                 # Сопротивление ВН-СН, Ом
    Zv_n = Zv + Zn + ((Zv * Zn) / Zs)                                 # Сопротивление ВН-НН, Ом
    Zs_n = Zs + Zn + ((Zs * Zn) / Zv)                                 # Сопротивление СН-НН, Ом
    return (
        complex(round(Zv_s.real,3), round(Zv_s.imag,3)),              # Округление (комплексный вид)
        complex(round(Zv_n.real,3), round(Zv_n.imag,3)),              # Округление (комплексный вид)
        complex(round(Zs_n.real,3), round(Zs_n.imag,3))               # Округление (комплексный вид)
    )


def main():
    Prov, Zv, Zs, Zn = calc_star()
    header = ' Схема "Звезда" '
    print(f'\n# {header:-^40} #\n')
    print(f'{"   Проводимость:":<22}', Prov)
    print(f'{"   Сопротивление ВН:":<22}', Zv)
    print(f'{"   Сопротивление СН:":<22}', Zs)
    print(f'{"   Сопротивление НН:":<22}', Zn)

    Zv_s, Zv_n, Zs_n = calc_triangle(Zv, Zs, Zn)
    header = ' Схема "Треугольник" '
    print(f'\n# {header:-^40} #\n')
    print(f'{"   Сопротивление ВН-СН:":<22}', Zv_s)
    print(f'{"   Сопротивление ВН-НН:":<22}', Zv_n)
    print(f'{"   Сопротивление СН-НН:":<22}', Zs_n)


if __name__ == '__main__':
    main()
